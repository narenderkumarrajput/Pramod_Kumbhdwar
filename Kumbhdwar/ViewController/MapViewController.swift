//
//  MapViewController.swift
//  Kumbhdwar
//
//  Created by Narender Kumar on 16/03/21.
//  Copyright Â© 2021 Narender Kumar. All rights reserved.
//

import UIKit
import CoreLocation
import GoogleMaps

class MapViewController: UIViewController {

    @IBOutlet weak var mapView: GMSMapView!
    var latLong: CLLocationCoordinate2D =  CLLocationCoordinate2D(latitude: 0.0, longitude: 0.0)
    var latLongParking: CLLocationCoordinate2D =  CLLocationCoordinate2D(latitude: 0.0, longitude: 0.0)
    var locationManager = CLLocationManager()
    var mapTitle: String = ""
    var isShowLocation = true
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        self.navigationItem.title = mapTitle
        self.navigationController?.navigationBar.isHidden = false
        self.navigationController?.navigationBar.barTintColor = AppStyleGuide.NewUI.Colors.appBg
        self.navigationController?.navigationBar.titleTextAttributes = [.foregroundColor: UIColor.white]
        
        let button = UIButton(type: UIButton.ButtonType.custom)
        button.setImage(UIImage(named: "ic_arrow_back_white_24dp"), for: .normal)
        button.addTarget(self, action:#selector(self.backAction), for: .touchUpInside) 
        button.frame = CGRect(x: 0, y: 0, width: 30, height: 30)
        let barButton = UIBarButtonItem(customView: button)
        self.navigationItem.leftBarButtonItems = [barButton]
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        
        self.showUserLocationOnMap()
    }
    
    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        self.navigationController?.navigationBar.isHidden = true
    }
    
    @objc func backAction() {
        self.navigationController?.popViewController(animated: true)
    }
    
    private func showUserLocationOnMap() {
        self.locationManager.delegate = self
        self.locationManager.startUpdatingLocation()
        
        if CLLocationManager.locationServicesEnabled() {
            print("yes")
        }
        else {
            print("no")
        }
    }
    
    func drawExitPlan() {
        self.navigationItem.title = "Exit Plan"
        
        let exitplan = ExitPlanCoordinate()
        let path = GMSMutablePath()
        for temp in exitplan.motichur_ISBT_Parking {
            path.add(CLLocationCoordinate2D(latitude: temp.last!, longitude: temp.first!))
        }
        let polyline = GMSPolyline(path: path)
        polyline.strokeWidth = 3.0
        polyline.strokeColor = .blue
        polyline.map = mapView
        
        let path1 = GMSMutablePath()
        for temp1 in exitplan.sector_1_BHEL_Parking {
            path1.add(CLLocationCoordinate2D(latitude: temp1.last!, longitude: temp1.first!))
        }
        let polyline1 = GMSPolyline(path: path1)
        polyline1.strokeWidth = 3.0
        polyline1.strokeColor = .blue
        polyline1.map = mapView
        
        let path2 = GMSMutablePath()
        for temp2 in exitplan.jwalapur_Railway_Station_Haridwar {
            path2.add(CLLocationCoordinate2D(latitude: temp2.last!, longitude: temp2.first!))
        }
        let polyline2 = GMSPolyline(path: path2)
        polyline2.strokeWidth = 3.0
        polyline2.strokeColor = .blue
        polyline2.map = mapView
        
        let path3 = GMSMutablePath()
        for temp3 in exitplan.dakshdweep_Parking {
            path3.add(CLLocationCoordinate2D(latitude: temp3.last!, longitude: temp3.first!))
        }
        let polyline3 = GMSPolyline(path: path3)
        polyline3.strokeWidth = 3.0
        polyline3.strokeColor = .blue
        polyline3.map = mapView
        
        let path4 = GMSMutablePath()
        for temp4 in exitplan.saptrishi_Ashram_Parking {
            path4.add(CLLocationCoordinate2D(latitude: temp4.last!, longitude: temp4.first!))
        }
        let polyline4 = GMSPolyline(path: path4)
        polyline4.strokeWidth = 3.0
        polyline4.strokeColor = .blue
        polyline4.map = mapView
        
        let path5 = GMSMutablePath()
        for temp5 in exitplan.gaurishankar_Parking {
            path5.add(CLLocationCoordinate2D(latitude: temp5.last!, longitude: temp5.first!))
        }
        let polyline5 = GMSPolyline(path: path5)
        polyline5.strokeWidth = 3.0
        polyline5.strokeColor = .blue
        polyline5.map = mapView
        
        let co = exitplan.gaurishankar_Parking.first
        let camera = GMSCameraPosition.camera(withLatitude: (co?.last)!, longitude: (co?.first!)!, zoom: 15.0)
        self.mapView?.animate(to: camera)
        
    }
    
    private func drawPathOnMap(from source: CLLocationCoordinate2D, to destination: CLLocationCoordinate2D) {
        mapView.drawPolygon(from: source, to: destination)
        
        var bounds = GMSCoordinateBounds()
        bounds = bounds.includingCoordinate(source)
        bounds = bounds.includingCoordinate(destination)
        
        mapView.setMinZoom(1, maxZoom: 15)
        let update = GMSCameraUpdate.fit(bounds, withPadding: 50)
        mapView.animate(with: update)
    }
    
    private func putMarkerOnMap(_ userLocation: CLLocationCoordinate2D, destinationLocation: CLLocationCoordinate2D) {
        let marker = GMSMarker(position: userLocation)
        marker.icon = GMSMarker.markerImage(with: UIColor.blue)
        marker.title = "Start"
        marker.map = mapView
        mapView.selectedMarker = marker
        
        let dMarker = GMSMarker(position: destinationLocation)
        dMarker.title = "Destination"
        dMarker.map = mapView
        mapView.selectedMarker = dMarker
        
        if latLongParking.latitude != 0.0 {
            let pMarker = GMSMarker(position: latLongParking)
            pMarker.title = "Parking"
            pMarker.map = mapView
            mapView.selectedMarker = pMarker
        }
    }
}

extension MapViewController: CLLocationManagerDelegate {
    
    func locationManager(_ manager: CLLocationManager, didChangeAuthorization status: CLAuthorizationStatus) {
            switch status {
            case .authorizedAlways, .authorizedWhenInUse:
                locationManager.startUpdatingLocation()

            case .denied:
                print("Location permission denied")
                self.showAlertWithOk(title: "Info", message: "Please go to Settings and turn on Location Service for this app.")

            case .restricted:
                print("Location permission restricted")
                self.showAlertWithOk(title: "Info", message: "Please go to Settings and turn on Location Service for this app.")

            case .notDetermined:
                print("Location permission notDetermined")
                self.showAlertWithOk(title: "Info", message: "Please go to Settings and turn on Location Service for this app.")

            @unknown default: break
                //fatalError()
            }
        }
    
    //Location Manager delegates
    func locationManager(_ manager: CLLocationManager, didUpdateLocations locations: [CLLocation]) {
        let location = locations.last
        let camera = GMSCameraPosition.camera(withLatitude: (location?.coordinate.latitude)!, longitude: (location?.coordinate.longitude)!, zoom: 17.0)

        self.mapView?.animate(to: camera)
        self.locationManager.stopUpdatingLocation()
        
        if isShowLocation {
            self.putMarkerOnMap(location!.coordinate, destinationLocation: self.latLong)
            self.drawPathOnMap(from: location!.coordinate, to: self.latLong)
            
            if latLongParking.latitude != 0.0 {
                self.drawPathOnMap(from: location!.coordinate, to: self.latLongParking)
            }
        }
    }
    
    func locationManager(_ manager: CLLocationManager, didFailWithError error: Error) {
        print("issue in get location")
    }
    
}






class ExitPlanCoordinate {
    
    let motichur_ISBT_Parking = [ [ 78.171046324774224, 29.957518232071951 ], [ 78.171132793880702, 29.957826919907081 ], [ 78.171239499906832, 29.958057656287799 ], [ 78.17142711075509, 29.958313390828341 ], [ 78.171661689067136, 29.958558301672792 ], [ 78.171721947068576, 29.958655546448501 ], [ 78.171741092372827, 29.958813589048152 ], [ 78.171582389006346, 29.959341434849861 ], [ 78.17160948042897, 29.95980160532682 ], [ 78.171724269510165, 29.96024898829317 ], [ 78.172243467503804, 29.961363613874251 ], [ 78.172403197258873, 29.962226031417231 ], [ 78.172592272259962, 29.962682636599329 ], [ 78.172707400127408, 29.96314146515352 ], [ 78.172732868703932, 29.963625084994501 ], [ 78.172698989341939, 29.963763257223199 ], [ 78.172841218251833, 29.964539991042539 ], [ 78.172913020726909, 29.964871219199878 ], [ 78.17306210976183, 29.966070544736919 ], [ 78.173228409403805, 29.967222930846258 ], [ 78.173271915427435, 29.967834246476301 ], [ 78.173306411493797, 29.968140700230752 ], [ 78.173366475698401, 29.968529359060589 ], [ 78.173525823051918, 29.969093227455769 ], [ 78.173580895662383, 29.969289064857861 ], [ 78.173696775230368, 29.969626620250061 ], [ 78.173771696879257, 29.969828226580852 ], [ 78.173937743522856, 29.970141779005349 ], [ 78.174040454377874, 29.97033666487464 ], [ 78.174726645281893, 29.97110474171912 ], [ 78.175476240504736, 29.971958267167839 ], [ 78.175994129892558, 29.972415469043479 ], [ 78.177271347010617, 29.973599987370299 ], [ 78.178109473728213, 29.97447697232468 ], [ 78.178391736838933, 29.974724897105901 ], [ 78.178676846823677, 29.975122328303701 ], [ 78.180129256884342, 29.977634420702511 ], [ 78.18101796713745, 29.97913644374238 ], [ 78.182634565655619, 29.981976048642039 ] ]
    
    
    let sector_1_BHEL_Parking = [ [ 78.127964880220716, 29.936265377966439 ], [ 78.130572917058529, 29.936135564438629 ], [ 78.131998117781322, 29.93609450241577 ], [ 78.132743144896168, 29.936051601223649 ], [ 78.132886795869169, 29.936016298344072 ], [ 78.133075432224985, 29.935952415774469 ], [ 78.133145264654175, 29.935919383843999 ], [ 78.133178024634631, 29.935870569884049 ], [ 78.133221755618379, 29.93584097983172 ], [ 78.133251756234699, 29.935746609303688 ], [ 78.133251756234699, 29.935746609303688 ], [ 78.133281756787142, 29.93565223876395 ], [ 78.133286925233492, 29.935608236205908 ], [ 78.133400602053527, 29.935451205186599 ], [ 78.133507458297345, 29.935260092706802 ], [ 78.133631607380835, 29.93506475923116 ], [ 78.133803294273932, 29.93481942187757 ], [ 78.133945196960894, 29.93465532578853 ], [ 78.134382331632551, 29.934257723730461 ], [ 78.134709703583496, 29.933959485664179 ], [ 78.134760020019925, 29.933934671923311 ], [ 78.134824592639006, 29.93393176153986 ], [ 78.134942039436297, 29.933750190039099 ], [ 78.135311158602576, 29.93399443887726 ], [ 78.136829389978232, 29.934864157860289 ], [ 78.138358053644879, 29.935754209453918 ], [ 78.138656268053964, 29.935917386021131 ], [ 78.139285098051118, 29.936310660096321 ], [ 78.139693759236692, 29.936597170799889 ], [ 78.141060945690626, 29.937522189393881 ], [ 78.142851495631135, 29.938746996982879 ], [ 78.143483214260343, 29.939182024311201 ], [ 78.144441722866588, 29.939831583749751 ], [ 78.145106884620475, 29.940292410553909 ], [ 78.146101523003964, 29.940996473183429 ], [ 78.146319418675475, 29.941144883770448 ], [ 78.14765624362461, 29.94208938796023 ], [ 78.148476195463957, 29.942633115101621 ], [ 78.148726012201692, 29.942742779544179 ], [ 78.149646200303962, 29.943354987741241 ], [ 78.150781133301905, 29.944000047836539 ], [ 78.152228413821931, 29.944858233537719 ], [ 78.153982761137001, 29.945879488570458 ], [ 78.154682105892903, 29.946292759355099 ], [ 78.155606766687029, 29.946848351538161 ], [ 78.156158843535025, 29.94713108995672 ], [ 78.15648894704816, 29.9473121814267 ], [ 78.156635950773747, 29.9474344607241 ], [ 78.156952688320985, 29.947721197533841 ], [ 78.157118896756756, 29.947843876638029 ], [ 78.157878531314523, 29.9482441814901 ], [ 78.158350388393615, 29.94851885762122 ], [ 78.159765817774314, 29.94939456132137 ], [ 78.160222863859545, 29.949677355858039 ], [ 78.160590614565308, 29.949865055673889 ], [ 78.160965324903586, 29.950062670038449 ], [ 78.161330658398754, 29.950311772057621 ], [ 78.162344583712994, 29.95100191555732 ], [ 78.163928178498452, 29.95201610189104 ], [ 78.164414666696544, 29.952321101319349 ], [ 78.164599036840329, 29.95238580809233 ], [ 78.164926950312861, 29.952450231958739 ], [ 78.1653399748743, 29.952523234262461 ], [ 78.165526689080593, 29.952641979774519 ], [ 78.165726996469104, 29.952828503850139 ], [ 78.165982500234577, 29.95312081560175 ], [ 78.166177977692428, 29.953340975341749 ], [ 78.166400283301911, 29.95356497959385 ], [ 78.166754877902562, 29.95381250656521 ], [ 78.167411960688696, 29.95419981627408 ], [ 78.168064249571202, 29.95459276927658 ], [ 78.16896359997655, 29.955241177587862 ], [ 78.169181896641376, 29.955473182467681 ], [ 78.169530013477583, 29.956056874028128 ], [ 78.169689664834792, 29.956213607744498 ], [ 78.169803882522345, 29.956258353031089 ], [ 78.170318143075164, 29.956126675335351 ], [ 78.170432712317734, 29.956383935314541 ], [ 78.170630885392129, 29.956811833801272 ], [ 78.170948656039243, 29.957359126192991 ], [ 78.171051021393069, 29.957321503502431 ] ]
    
    let jwalapur_Railway_Station_Haridwar = [ [ 78.132850914829859, 29.93572144258578 ], [ 78.132957053963864, 29.935593374270621 ], [ 78.133017510168671, 29.935561768494988 ], [ 78.133094363758119, 29.935551136768812 ], [ 78.133232331726774, 29.935550268054751 ], [ 78.13330167134086, 29.935491813369019 ], [ 78.133535764032175, 29.935067269137171 ], [ 78.133686673676991, 29.93485253007719 ], [ 78.133903113046941, 29.93460642777913 ], [ 78.134574461626585, 29.933994906523939 ], [ 78.134825707044783, 29.933729395097291 ], [ 78.135504623569418, 29.932974701700122 ], [ 78.135980798846433, 29.93228730686387 ], [ 78.136420258724797, 29.931704366017119 ], [ 78.136645097270574, 29.93137193614324 ], [ 78.136774002866616, 29.931142940957709 ], [ 78.13690088169686, 29.93079214120251 ], [ 78.13708243670284, 29.93039154070134 ], [ 78.137255193282726, 29.929986661259719 ], [ 78.137635209213855, 29.930264145567129 ], [ 78.137745020622219, 29.930288090283462 ], [ 78.137841775100128, 29.930299754964761 ], [ 78.138062144842266, 29.930382014979081 ], [ 78.138991814365625, 29.930920154947191 ], [ 78.139605953884143, 29.931334000928441 ], [ 78.139688296853024, 29.931419206850439 ], [ 78.139761473828912, 29.93154169018819 ], [ 78.14041422368399, 29.931943897698758 ], [ 78.141227207812207, 29.932413460020591 ], [ 78.142619376594226, 29.93321354823259 ], [ 78.143705780413015, 29.93385889063887 ], [ 78.144966350872394, 29.934600998355499 ], [ 78.145880444585714, 29.935129038782851 ], [ 78.146753614503282, 29.93566650545446 ], [ 78.147144244497795, 29.935937856096409 ], [ 78.148155723976245, 29.936619264664738 ], [ 78.148853108346898, 29.937069978102389 ], [ 78.149673020913383, 29.937611197142981 ], [ 78.150356624265541, 29.93804696190249 ], [ 78.150976591830911, 29.938446537324879 ], [ 78.151356062342998, 29.938687042326681 ], [ 78.15211802415341, 29.939193108566549 ], [ 78.152813170008571, 29.93963252174176 ], [ 78.153286859337967, 29.939926354143129 ], [ 78.15340662002933, 29.939997953983699 ], [ 78.153446570737117, 29.940006888894469 ], [ 78.153512582437386, 29.939996875124582 ], [ 78.153562139167221, 29.939977804303581 ], [ 78.153581757642101, 29.939976434267091 ], [ 78.153659723804594, 29.94003064945711 ], [ 78.153806267696851, 29.940150900163349 ], [ 78.153920236856607, 29.94023883852034 ], [ 78.154134918578166, 29.940227131759219 ], [ 78.154421425965054, 29.940186043842591 ], [ 78.154984229411184, 29.940072580747589 ], [ 78.15584929319914, 29.939973329087021 ], [ 78.156400446373723, 29.93996889022219 ], [ 78.156782544927125, 29.94002482307582 ], [ 78.157070233685019, 29.940109668339989 ], [ 78.15742322121487, 29.940284724504231 ], [ 78.157698264383626, 29.9404866219474 ], [ 78.157778611685913, 29.94054560121846 ], [ 78.157967144116711, 29.940699135579969 ], [ 78.159234599912864, 29.941680601184601 ], [ 78.159813789539285, 29.942159665607889 ], [ 78.159851589978743, 29.942326380210609 ], [ 78.160110336998187, 29.942608083942989 ], [ 78.160401584836123, 29.94292249806265 ], [ 78.161324690285156, 29.943531182752182 ], [ 78.16208975990709, 29.94412983490156 ], [ 78.162406653344348, 29.944486618697539 ], [ 78.163788735384273, 29.945861920108381 ], [ 78.164133243178966, 29.94603699550024 ], [ 78.165139943687919, 29.94698418519128 ], [ 78.165548064811617, 29.947365326018019 ], [ 78.166355207501383, 29.948089319663701 ], [ 78.167150830687362, 29.948676795930808 ], [ 78.16776979340959, 29.949118677062259 ], [ 78.168435671951343, 29.94964412218043 ], [ 78.169219496062681, 29.950616339240611 ], [ 78.169821712904877, 29.951387533020849 ], [ 78.170270860275522, 29.951924435443651 ], [ 78.170945230292432, 29.95236251420955 ], [ 78.171102056854536, 29.95254742769739 ], [ 78.172299568283947, 29.953641705023699 ], [ 78.172520935232356, 29.95397827511027 ], [ 78.172848052772579, 29.954501378230681 ], [ 78.172981583103251, 29.954852730495489 ], [ 78.173337698870569, 29.955259942065631 ], [ 78.173556278080696, 29.95550988120446 ], [ 78.173134295738024, 29.955707558912181 ], [ 78.170974903849924, 29.95676765804382 ] ]
    
    
    let dakshdweep_Parking = [ [ 78.145091350363828, 29.917826629281699 ], [ 78.143702150940456, 29.918150593308301 ], [ 78.143730619653752, 29.9182144858014 ], [ 78.144159996296992, 29.919906621428819 ], [ 78.14430802664198, 29.919909671120511 ], [ 78.144490453899607, 29.91995363323262 ], [ 78.144687046856674, 29.920037907498109 ], [ 78.144935113582633, 29.920463365837868 ], [ 78.145074656949703, 29.920749075818659 ], [ 78.145305590984435, 29.92162498991831 ], [ 78.145467552347426, 29.921872521235439 ], [ 78.146024306920083, 29.92257270591691 ], [ 78.146405235153111, 29.92308782631045 ], [ 78.146425294623199, 29.923323701802069 ], [ 78.146416005376466, 29.923923048844951 ], [ 78.146356434988888, 29.92409208681909 ], [ 78.146233755385126, 29.924280193224622 ], [ 78.146262690063267, 29.92436257629554 ], [ 78.146300014136855, 29.924424702724661 ], [ 78.146581620364827, 29.92469651248145 ], [ 78.1470982572081, 29.925078566946748 ], [ 78.147096113795968, 29.925153667565951 ], [ 78.147078679883293, 29.92521477135962 ], [ 78.147077121049392, 29.92526938894823 ], [ 78.147150227672512, 29.925455421817059 ], [ 78.147260578587634, 29.92571057247466 ], [ 78.147257736136041, 29.925987195545709 ], [ 78.147407822423759, 29.926261271758559 ], [ 78.147414400063667, 29.926549437216732 ], [ 78.147551550706908, 29.926731775023349 ], [ 78.148187609661264, 29.927340866708359 ], [ 78.148513436894731, 29.927634716229552 ], [ 78.14906496805196, 29.928549174858251 ], [ 78.149262334613454, 29.928903758882669 ], [ 78.149610878564559, 29.929730478505508 ], [ 78.149801830725437, 29.930183769979831 ], [ 78.149975416243478, 29.930223667517382 ], [ 78.15021281780956, 29.930464950417878 ], [ 78.150588376264409, 29.930988376281888 ], [ 78.151007799242009, 29.93192736474208 ], [ 78.151003516763467, 29.932090936832552 ], [ 78.151354330279545, 29.93281660180234 ], [ 78.151465513046659, 29.93322845035873 ], [ 78.151741321629629, 29.933901836434629 ], [ 78.15192272481903, 29.934472989400749 ], [ 78.152059632585065, 29.93470962252524 ], [ 78.152305881782581, 29.935081398842019 ], [ 78.152369414189323, 29.93525556864919 ], [ 78.152580649154274, 29.93589472281478 ], [ 78.152679978129399, 29.936254127770699 ], [ 78.152786020599251, 29.936760214541788 ], [ 78.152831589622167, 29.9369413876117 ], [ 78.152903580161492, 29.93701097431769 ], [ 78.153606237456756, 29.93753052048994 ], [ 78.154212832369339, 29.938553883133569 ], [ 78.154500055929759, 29.938996953580261 ], [ 78.154583913666229, 29.93970938589808 ], [ 78.154613470165557, 29.93991179803913 ], [ 78.155392483564228, 29.939844309196172 ], [ 78.156023771417139, 29.93980062473668 ], [ 78.156328004461741, 29.939817941612819 ], [ 78.156534813524686, 29.939858229309511 ], [ 78.156917010586525, 29.939972673717818 ], [ 78.157184532449037, 29.940073956134079 ], [ 78.157422903897938, 29.94019936918334 ], [ 78.157674543968952, 29.940358670485089 ], [ 78.158066404494775, 29.94065320982785 ], [ 78.158432950062476, 29.940953046139029 ], [ 78.159136534740796, 29.941506989282502 ], [ 78.161341878597895, 29.94326019358336 ], [ 78.163139846676756, 29.944745335157918 ], [ 78.163647147835547, 29.945203673327178 ], [ 78.163857160220118, 29.94539028297195 ], [ 78.16397935633654, 29.945509968437211 ], [ 78.163972455540318, 29.945647684849849 ], [ 78.163870002856626, 29.945848171918708 ], [ 78.163313452096872, 29.946275105502721 ], [ 78.163236060079399, 29.94644203372248 ], [ 78.163119680764126, 29.946518003388441 ], [ 78.16309943512077, 29.94657995809137 ], [ 78.163174471958556, 29.946614647607031 ], [ 78.164866692194323, 29.947992088003851 ], [ 78.166095146940776, 29.949020663817411 ], [ 78.166896258284396, 29.949685885844001 ], [ 78.167083021495571, 29.949747319861789 ], [ 78.167818276807736, 29.950243820004069 ], [ 78.168109395664871, 29.950585473053479 ], [ 78.168611938320154, 29.95109527581781 ], [ 78.169004171458127, 29.951455737991321 ], [ 78.170475907131262, 29.952698804980582 ], [ 78.170102629723033, 29.95298716902003 ], [ 78.171286100894335, 29.954327934176241 ], [ 78.171535054483243, 29.954190194708659 ], [ 78.172293781952575, 29.955080639955071 ], [ 78.171293436161818, 29.955765095537078 ] ]
    
    let saptrishi_Ashram_Parking = [ [ 78.171872863377857, 29.957442292733528 ], [ 78.172514181308784, 29.958300289379341 ], [ 78.172821193394341, 29.958694110178111 ], [ 78.173106978701796, 29.959458429240229 ], [ 78.173208056052644, 29.959624990750019 ], [ 78.173741647830639, 29.960312954972171 ], [ 78.174723698772496, 29.96139102095945 ], [ 78.175268397597776, 29.96225337160174 ], [ 78.175508173237915, 29.96272290656789 ], [ 78.174356575554825, 29.963136476930771 ], [ 78.173180876081645, 29.963430345726501 ], [ 78.17287766071307, 29.963644696290519 ], [ 78.172728082668087, 29.96373973631853 ], [ 78.172729929873469, 29.963797352068578 ], [ 78.172820791746702, 29.964263940748111 ], [ 78.172942151782195, 29.964848905425811 ], [ 78.172988454411097, 29.965198084629279 ], [ 78.17311092232238, 29.966044932928291 ], [ 78.173283753620737, 29.967519898748929 ], [ 78.173543848185219, 29.967859930033939 ], [ 78.173739547640466, 29.968129387945599 ], [ 78.173911265819456, 29.968377922823681 ], [ 78.1740445244683, 29.968511890472019 ], [ 78.174368623540715, 29.968752181026591 ], [ 78.174841159215745, 29.969065743460451 ], [ 78.175313134568739, 29.969361699189051 ], [ 78.175520874540254, 29.969498989246809 ], [ 78.175651136113061, 29.96964997787261 ], [ 78.175800269073363, 29.96971880770473 ], [ 78.176114460170893, 29.969819257842371 ], [ 78.176437363279547, 29.969904767376669 ], [ 78.176536631405156, 29.969979831016769 ], [ 78.176573988854969, 29.970004265549971 ], [ 78.176588486541178, 29.970015477543509 ], [ 78.176709469018135, 29.970270810669231 ], [ 78.176918776590284, 29.970819664311922 ], [ 78.177124258468325, 29.971126718932009 ], [ 78.177341475372586, 29.971267642528879 ], [ 78.177942112943825, 29.97133248777314 ], [ 78.17848199031927, 29.97135657648996 ], [ 78.180439653451273, 29.971224899086099 ], [ 78.181281355379497, 29.971361521909831 ], [ 78.184212579329824, 29.97213862693852 ], [ 78.184546925938548, 29.972203207010772 ], [ 78.184737557511269, 29.972285329297339 ], [ 78.184904179165187, 29.972377969845851 ], [ 78.185184310348561, 29.97266468961298 ], [ 78.185812564135958, 29.973376438884578 ], [ 78.18594507176546, 29.97356208996133 ], [ 78.186048879469539, 29.973774372706551 ], [ 78.186588705948566, 29.974807553514861 ], [ 78.187217717002454, 29.976042945096971 ], [ 78.187444058625701, 29.976364700619602 ], [ 78.187827602889527, 29.976931951812261 ], [ 78.187908134256304, 29.97708103158427 ], [ 78.187892584179963, 29.977124311664749 ], [ 78.187645648519393, 29.977789352023049 ], [ 78.187499065773736, 29.978185264992099 ], [ 78.187550288366538, 29.97836077714723 ], [ 78.187795702192489, 29.97867827994456 ], [ 78.188698526736289, 29.97971358277319 ], [ 78.189481992277692, 29.980608905880882 ], [ 78.189996596485855, 29.981196598009362 ], [ 78.190964494365417, 29.982209890889958 ], [ 78.191853533485428, 29.98313269277055 ], [ 78.193185665598961, 29.98455833798268 ], [ 78.194441138523544, 29.985897582599119 ], [ 78.194847698296826, 29.98627332692454 ], [ 78.195247144764338, 29.986579003427881 ], [ 78.193514871073887, 29.98817132584545 ] ]
    
    let gaurishankar_Parking = [ [ 78.171407907995146, 29.955979248909198 ], [ 78.173343045400188, 29.95490226556214 ], [ 78.17357307930763, 29.95478020209136 ], [ 78.173479438491881, 29.954536513828359 ], [ 78.173252729884993, 29.954193529052539 ], [ 78.173042118310619, 29.953374897655621 ], [ 78.172869156678317, 29.95285415993412 ], [ 78.172569926350718, 29.95228049774181 ], [ 78.172547655741525, 29.952055855001241 ], [ 78.173175026466538, 29.951538488219072 ], [ 78.172946839432313, 29.951352579137382 ], [ 78.1725333524614, 29.9511699487608 ], [ 78.17238183881669, 29.9510854132532 ], [ 78.171957103141622, 29.95092747694709 ], [ 78.170890648276881, 29.950204400093131 ], [ 78.170412342328405, 29.949771549472949 ], [ 78.169724980382952, 29.949120375054079 ], [ 78.1692570329418, 29.948439255260482 ], [ 78.168983895692023, 29.947865427782219 ], [ 78.168776166554537, 29.947488801435359 ], [ 78.168638377404079, 29.946814534659939 ], [ 78.168631601198399, 29.946603558577539 ], [ 78.168763027744049, 29.94646973468161 ], [ 78.168892752434758, 29.946396809568459 ], [ 78.169272297448586, 29.946337175749498 ], [ 78.169473031005111, 29.946352168614808 ], [ 78.169387944334005, 29.946302888177399 ], [ 78.166991681222314, 29.944851453185599 ], [ 78.16642768096186, 29.944051018392202 ], [ 78.168714937294553, 29.942206190723571 ], [ 78.168142661347403, 29.941623041747061 ], [ 78.168842055128607, 29.941081357405078 ], [ 78.170207716018226, 29.94024929046321 ], [ 78.169529640257323, 29.938890509351221 ], [ 78.168157978438401, 29.93618455093069 ], [ 78.167497290543281, 29.93482332857014 ], [ 78.166078038749916, 29.931937631676341 ], [ 78.165389780451321, 29.929886864626969 ], [ 78.17079175825971, 29.92933604646165 ] ]
    
    init() {
    }
    
}
